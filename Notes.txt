assume fixed-wing vs. quadrotor
radar input with recursive ransack
#class of intruders
	initialize (position, velocity)
	rotation matrices, trajectories
	hold min turn radius
	return trajectory
class ownship (min radius, parameters)

#graph everything in 3D:
QUESTIONS:
3D volume for intruders


COMPLETED:
simplify code by running main function that calls how many intruders
create function for random position
create function for random velocity
add mesh of drone
add various colors for intruders
10/16/18
set correct ownship initial position and velocity
eliminate duplicate intruders on each position
create collion, self-separation, and threshold volumes
10/17/18
added circle mesh to top and bottom of cylinders
10/18/18
stop simulation when ownship leaves the perimeter
remove extra 2 points in circle mesh to stop warning
10/20/18
have cylinders color blip white if collision
10/22/18
more accurate timing

TO DO:
keep code relevant and organized
create speedy simluation without visuals
implement monte carlo options

create "shadow" of previous locations
create functionality alerting if any volumes interfered
add mesh of intruder vehicles
